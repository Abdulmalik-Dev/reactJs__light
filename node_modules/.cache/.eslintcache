[{"D:\\reactJs__light\\src\\index.js":"1","D:\\reactJs__light\\src\\App.js":"2"},{"size":146,"mtime":1645647541000,"results":"3","hashOfConfig":"4"},{"size":2206,"mtime":1645647541000,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x6xofn",{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"D:\\reactJs__light\\src\\index.js",[],"D:\\reactJs__light\\src\\App.js",["11"],"// Styled-styledComponents\nimport Styled from \"styled-components\";\n// React\nimport { Component } from \"react\";\n\nclass App extends Component {\n  render() {\n    // Start Styles\n    const Container = Styled.div`\n    border: 5px solid black;\n    width: 300px;\n    height: 300px;\n    padding: 5px 10px;\n    margin: 20px auto;\n    position: relative;\n  `;\n    const Circles = Styled.div`\n    &:first-child,\n    &:last-child{\n        display: inline-block;\n        background-color: yellow;\n        width: 100px;\n        height: 100px;\n        border-radius: 50%;\n        margin: 0 20px;\n    }\n    &:first-child span,\n    &:last-child span{\n      position: absolute;\n      bottom: 10px;\n      width: 80px;\n      height: 26px;\n      text-align: center;\n      background-color: red;\n      color: white;\n      cursor: pointer;\n      line-height: 1.5;\n      border-radius: 6px;\n      user-select: none;\n    }\n  `;\n    // End Styles\n\n    // The Content\n    return (\n      <Container>\n        <Circles>\n          <span data-status=\"on\">on</span>\n        </Circles>\n        <Circles>\n          <span data-status=\"on\">on</span>\n        </Circles>\n      </Container>\n    );\n  }\n}\n\n// Light Effect\ndocument.onclick = (e) => {\n  // Check If The dataset Value Equal To On Or Not\n  if (e.target.dataset.status == \"on\") {\n    // Make It OFF\n    e.target.dataset.status = \"off\";\n    // Make The Circle Background Color Black\n    e.target.parentElement.style.backgroundColor = \"black\";\n    // Make The Button Text Equal To The Data Set Value (OFF)\n    e.target.innerHTML = e.target.dataset.status;\n    // To Cahnge The Light Background Color\n    e.target.style.backgroundColor = \"lightgray\";\n    // To Cahnge The Light Color\n    e.target.style.color = \"black\";\n  } else {\n    // Make It ON\n    e.target.dataset.status = \"on\";\n    // Make The Circle Background Color Yellow\n    e.target.parentElement.style.backgroundColor = \"yellow\";\n    // Make The Button Text Equal To The Data Set Value (ON)\n    e.target.innerHTML = e.target.dataset.status;\n    // To Cahnge The Light Background Color\n    e.target.style.backgroundColor = \"red\";\n    // To Cahnge The Light Color\n    e.target.style.color = \"white\";\n  }\n};\nexport default App;\n",{"ruleId":"12","severity":1,"message":"13","line":61,"column":31,"nodeType":"14","messageId":"15","endLine":61,"endColumn":33},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]