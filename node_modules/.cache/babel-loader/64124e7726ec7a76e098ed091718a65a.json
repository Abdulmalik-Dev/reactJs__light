{"ast":null,"code":"var _jsxFileName = \"D:\\\\light\\\\src\\\\App.js\";\n// React\nimport Styled from \"styled-components\"; // Styled-styledComponents\n\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  render() {\n    // Start Styles\n    const Container = Styled.div`\n    border: 5px solid black;\n    width: 300px;\n    height: 300px;\n    padding: 5px 10px;\n    margin: 20px auto;\n    position: relative;\n  `;\n    const Circles = Styled.div`\n    &:first-child,\n    &:last-child{\n        display: inline-block;\n        background-color: yellow;\n        width: 100px;\n        height: 100px;\n        border-radius: 50%;\n        margin: 0 20px;\n    }\n    &:first-child span,\n    &:last-child span{\n      position: absolute;\n      bottom: 10px;\n      width: 80px;\n      height: 26px;\n      text-align: center;\n      background-color: red;\n      color: white;\n      cursor: pointer;\n      line-height: 1.5;\n      border-radius: 6px;\n      user-select: none;\n    }\n  `; // End Styles\n    // The Content\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Circles, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-status\": \"on\",\n          children: \"on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Circles, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-status\": \"on\",\n          children: \"on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n} // Light Effect\n\n\ndocument.onclick = e => {\n  // Check If The dataset Value Equal To On Or Not\n  if (e.target.dataset.status == \"on\") {\n    // Make It OFF\n    e.target.dataset.status = \"off\"; // Make The Circle Background Color Black\n\n    e.target.parentElement.style.backgroundColor = \"black\"; // Make The Button Text Equal To The Data Set Value (OFF)\n\n    e.target.innerHTML = e.target.dataset.status;\n  } else {\n    // Make It ON\n    e.target.dataset.status = \"on\"; // Make The Circle Background Color Yellow\n\n    e.target.parentElement.style.backgroundColor = \"yellow\"; // Make The Button Text Equal To The Data Set Value (ON)\n\n    e.target.innerHTML = e.target.dataset.status;\n  }\n};\n\nexport default App;","map":{"version":3,"sources":["D:/light/src/App.js"],"names":["Styled","Component","App","render","Container","div","Circles","document","onclick","e","target","dataset","status","parentElement","style","backgroundColor","innerHTML"],"mappings":";AAAA;AACA,OAAOA,MAAP,MAAmB,mBAAnB,C,CACA;;AACA,SAASC,SAAT,QAA0B,OAA1B;;;AAEA,MAAMC,GAAN,SAAkBD,SAAlB,CAA4B;AAC1BE,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,GAPI;AAQA,UAAMC,OAAO,GAAGN,MAAM,CAACK,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAxBI,CAVO,CAmCP;AAEA;;AACA,wBACE,QAAC,SAAD;AAAA,8BACE,QAAC,OAAD;AAAA,+BACE;AAAM,yBAAY,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,OAAD;AAAA,+BACE;AAAM,yBAAY,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAjDyB,C,CAoD5B;;;AACAE,QAAQ,CAACC,OAAT,GAAoBC,CAAD,IAAO;AACxB;AACA,MAAIA,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBC,MAAjB,IAA2B,IAA/B,EAAqC;AACnC;AACAH,IAAAA,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBC,MAAjB,GAA0B,KAA1B,CAFmC,CAGnC;;AACAH,IAAAA,CAAC,CAACC,MAAF,CAASG,aAAT,CAAuBC,KAAvB,CAA6BC,eAA7B,GAA+C,OAA/C,CAJmC,CAKnC;;AACAN,IAAAA,CAAC,CAACC,MAAF,CAASM,SAAT,GAAqBP,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBC,MAAtC;AACD,GAPD,MAOO;AACL;AACAH,IAAAA,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBC,MAAjB,GAA0B,IAA1B,CAFK,CAGL;;AACAH,IAAAA,CAAC,CAACC,MAAF,CAASG,aAAT,CAAuBC,KAAvB,CAA6BC,eAA7B,GAA+C,QAA/C,CAJK,CAKL;;AACAN,IAAAA,CAAC,CAACC,MAAF,CAASM,SAAT,GAAqBP,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiBC,MAAtC;AACD;AACF,CAjBD;;AAkBA,eAAeV,GAAf","sourcesContent":["// React\nimport Styled from \"styled-components\";\n// Styled-styledComponents\nimport { Component } from \"react\";\n\nclass App extends Component {\n  render() {\n    // Start Styles\n    const Container = Styled.div`\n    border: 5px solid black;\n    width: 300px;\n    height: 300px;\n    padding: 5px 10px;\n    margin: 20px auto;\n    position: relative;\n  `;\n    const Circles = Styled.div`\n    &:first-child,\n    &:last-child{\n        display: inline-block;\n        background-color: yellow;\n        width: 100px;\n        height: 100px;\n        border-radius: 50%;\n        margin: 0 20px;\n    }\n    &:first-child span,\n    &:last-child span{\n      position: absolute;\n      bottom: 10px;\n      width: 80px;\n      height: 26px;\n      text-align: center;\n      background-color: red;\n      color: white;\n      cursor: pointer;\n      line-height: 1.5;\n      border-radius: 6px;\n      user-select: none;\n    }\n  `;\n    // End Styles\n\n    // The Content\n    return (\n      <Container>\n        <Circles>\n          <span data-status=\"on\">on</span>\n        </Circles>\n        <Circles>\n          <span data-status=\"on\">on</span>\n        </Circles>\n      </Container>\n    );\n  }\n}\n\n// Light Effect\ndocument.onclick = (e) => {\n  // Check If The dataset Value Equal To On Or Not\n  if (e.target.dataset.status == \"on\") {\n    // Make It OFF\n    e.target.dataset.status = \"off\";\n    // Make The Circle Background Color Black\n    e.target.parentElement.style.backgroundColor = \"black\";\n    // Make The Button Text Equal To The Data Set Value (OFF)\n    e.target.innerHTML = e.target.dataset.status;\n  } else {\n    // Make It ON\n    e.target.dataset.status = \"on\";\n    // Make The Circle Background Color Yellow\n    e.target.parentElement.style.backgroundColor = \"yellow\";\n    // Make The Button Text Equal To The Data Set Value (ON)\n    e.target.innerHTML = e.target.dataset.status;\n  }\n};\nexport default App;\n"]},"metadata":{},"sourceType":"module"}